// =============================================================================
// Creo Responsive Utilities
// =============================================================================
// Responsive utility classes for common patterns
// Part of Creo CSS Framework - utilities/_responsive.scss

@use 'sass:map';
@use '../core/tokens' as tokens;

// =============================================================================
// Helper Functions
// =============================================================================

// Convert spacing names to valid CSS class names
@function valid-class-name($name) {
  // Handle common decimal values manually
  @if $name == 0.5 {
    @return "0_5";
  } @else if $name == 1.5 {
    @return "1_5";
  } @else if $name == 2.5 {
    @return "2_5";
  } @else if $name == 3.5 {
    @return "3_5";
  } @else {
    @return $name;
  }
}

// =============================================================================
// Display Utilities
// =============================================================================

// Base display utilities
.u-block { display: block !important; }
.u-inline-block { display: inline-block !important; }
.u-inline { display: inline !important; }
.u-flex { display: flex !important; }
.u-inline-flex { display: inline-flex !important; }
.u-grid { display: grid !important; }
.u-inline-grid { display: inline-grid !important; }
.u-hidden { display: none !important; }

// Responsive display utilities
@each $breakpoint, $value in tokens.$creo-breakpoints {
  @if $value > 0 {
    @media (min-width: $value) {
      .u-#{$breakpoint}\:block { display: block !important; }
      .u-#{$breakpoint}\:inline-block { display: inline-block !important; }
      .u-#{$breakpoint}\:inline { display: inline !important; }
      .u-#{$breakpoint}\:flex { display: flex !important; }
      .u-#{$breakpoint}\:inline-flex { display: inline-flex !important; }
      .u-#{$breakpoint}\:grid { display: grid !important; }
      .u-#{$breakpoint}\:inline-grid { display: inline-grid !important; }
      .u-#{$breakpoint}\:hidden { display: none !important; }
    }
  }
}

// =============================================================================
// Flexbox Utilities
// =============================================================================

// Flex direction
.u-flex-row { flex-direction: row !important; }
.u-flex-row-reverse { flex-direction: row-reverse !important; }
.u-flex-col { flex-direction: column !important; }
.u-flex-col-reverse { flex-direction: column-reverse !important; }

// Flex wrap
.u-flex-wrap { flex-wrap: wrap !important; }
.u-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }
.u-flex-nowrap { flex-wrap: nowrap !important; }

// Flex grow and shrink
.u-flex-1 { flex: 1 1 0% !important; }
.u-flex-auto { flex: 1 1 auto !important; }
.u-flex-initial { flex: 0 1 auto !important; }
.u-flex-none { flex: none !important; }

.u-flex-grow { flex-grow: 1 !important; }
.u-flex-grow-0 { flex-grow: 0 !important; }
.u-flex-shrink { flex-shrink: 1 !important; }
.u-flex-shrink-0 { flex-shrink: 0 !important; }

// Justify content
.u-justify-start { justify-content: flex-start !important; }
.u-justify-end { justify-content: flex-end !important; }
.u-justify-center { justify-content: center !important; }
.u-justify-between { justify-content: space-between !important; }
.u-justify-around { justify-content: space-around !important; }
.u-justify-evenly { justify-content: space-evenly !important; }

// Align items
.u-items-start { align-items: flex-start !important; }
.u-items-end { align-items: flex-end !important; }
.u-items-center { align-items: center !important; }
.u-items-baseline { align-items: baseline !important; }
.u-items-stretch { align-items: stretch !important; }

// Align self
.u-self-auto { align-self: auto !important; }
.u-self-start { align-self: flex-start !important; }
.u-self-end { align-self: flex-end !important; }
.u-self-center { align-self: center !important; }
.u-self-stretch { align-self: stretch !important; }

// Responsive flexbox utilities
@each $breakpoint, $value in tokens.$creo-breakpoints {
  @if $value > 0 {
    @media (min-width: $value) {
      .u-#{$breakpoint}\:flex-row { flex-direction: row !important; }
      .u-#{$breakpoint}\:flex-col { flex-direction: column !important; }
      .u-#{$breakpoint}\:flex-wrap { flex-wrap: wrap !important; }
      .u-#{$breakpoint}\:flex-nowrap { flex-wrap: nowrap !important; }
      
      .u-#{$breakpoint}\:justify-start { justify-content: flex-start !important; }
      .u-#{$breakpoint}\:justify-center { justify-content: center !important; }
      .u-#{$breakpoint}\:justify-between { justify-content: space-between !important; }
      
      .u-#{$breakpoint}\:items-start { align-items: flex-start !important; }
      .u-#{$breakpoint}\:items-center { align-items: center !important; }
      .u-#{$breakpoint}\:items-end { align-items: flex-end !important; }
    }
  }
}

// =============================================================================
// Grid Utilities
// =============================================================================

// Grid template columns
.u-grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
.u-grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
.u-grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
.u-grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
.u-grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
.u-grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)) !important; }

// Grid column span
.u-col-span-1 { grid-column: span 1 / span 1 !important; }
.u-col-span-2 { grid-column: span 2 / span 2 !important; }
.u-col-span-3 { grid-column: span 3 / span 3 !important; }
.u-col-span-4 { grid-column: span 4 / span 4 !important; }
.u-col-span-6 { grid-column: span 6 / span 6 !important; }
.u-col-span-full { grid-column: 1 / -1 !important; }

// Responsive grid utilities
@each $breakpoint, $value in tokens.$creo-breakpoints {
  @if $value > 0 {
    @media (min-width: $value) {
      .u-#{$breakpoint}\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
      .u-#{$breakpoint}\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
      .u-#{$breakpoint}\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
      .u-#{$breakpoint}\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
      .u-#{$breakpoint}\:grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
      .u-#{$breakpoint}\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)) !important; }
      
      .u-#{$breakpoint}\:col-span-1 { grid-column: span 1 / span 1 !important; }
      .u-#{$breakpoint}\:col-span-2 { grid-column: span 2 / span 2 !important; }
      .u-#{$breakpoint}\:col-span-3 { grid-column: span 3 / span 3 !important; }
      .u-#{$breakpoint}\:col-span-4 { grid-column: span 4 / span 4 !important; }
      .u-#{$breakpoint}\:col-span-6 { grid-column: span 6 / span 6 !important; }
      .u-#{$breakpoint}\:col-span-full { grid-column: 1 / -1 !important; }
    }
  }
}

// =============================================================================
// Responsive Spacing Utilities
// =============================================================================

// Generate responsive margin utilities (subset for performance)
@each $breakpoint, $value in tokens.$creo-breakpoints {
  @if $value > 0 {
    @media (min-width: $value) {
      // Common spacing values only
      @each $space-name, $space-value in (
        0: 0,
        1: tokens.$creo-space-xs,
        2: tokens.$creo-space-sm, 
        4: tokens.$creo-space-md,
        6: tokens.$creo-space-lg,
        8: tokens.$creo-space-xl
      ) {
        $class-name: valid-class-name($space-name);
        
        .u-#{$breakpoint}\:m-#{$class-name} { margin: $space-value !important; }
        .u-#{$breakpoint}\:mx-#{$class-name} { 
          margin-left: $space-value !important;
          margin-right: $space-value !important;
        }
        .u-#{$breakpoint}\:my-#{$class-name} { 
          margin-top: $space-value !important;
          margin-bottom: $space-value !important;
        }
        .u-#{$breakpoint}\:mt-#{$class-name} { margin-top: $space-value !important; }
        .u-#{$breakpoint}\:mr-#{$class-name} { margin-right: $space-value !important; }
        .u-#{$breakpoint}\:mb-#{$class-name} { margin-bottom: $space-value !important; }
        .u-#{$breakpoint}\:ml-#{$class-name} { margin-left: $space-value !important; }
      }
      
      // Auto margins
      .u-#{$breakpoint}\:mx-auto { 
        margin-left: auto !important;
        margin-right: auto !important;
      }
      .u-#{$breakpoint}\:my-auto { 
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
    }
  }
}

// =============================================================================
// Width and Height Utilities
// =============================================================================

// Width utilities
.u-w-auto { width: auto !important; }
.u-w-full { width: 100% !important; }
.u-w-screen { width: 100vw !important; }
.u-w-min { width: min-content !important; }
.u-w-max { width: max-content !important; }
.u-w-fit { width: fit-content !important; }

// Fractional widths
.u-w-1\/2 { width: 50% !important; }
.u-w-1\/3 { width: 33.333333% !important; }
.u-w-2\/3 { width: 66.666667% !important; }
.u-w-1\/4 { width: 25% !important; }
.u-w-3\/4 { width: 75% !important; }

// Height utilities
.u-h-auto { height: auto !important; }
.u-h-full { height: 100% !important; }
.u-h-screen { height: 100vh !important; }
.u-h-min { height: min-content !important; }
.u-h-max { height: max-content !important; }
.u-h-fit { height: fit-content !important; }

// Responsive width utilities
@each $breakpoint, $value in tokens.$creo-breakpoints {
  @if $value > 0 {
    @media (min-width: $value) {
      .u-#{$breakpoint}\:w-auto { width: auto !important; }
      .u-#{$breakpoint}\:w-full { width: 100% !important; }
      .u-#{$breakpoint}\:w-1\/2 { width: 50% !important; }
      .u-#{$breakpoint}\:w-1\/3 { width: 33.333333% !important; }
      .u-#{$breakpoint}\:w-2\/3 { width: 66.666667% !important; }
      .u-#{$breakpoint}\:w-1\/4 { width: 25% !important; }
      .u-#{$breakpoint}\:w-3\/4 { width: 75% !important; }
    }
  }
}

// =============================================================================
// Position Utilities
// =============================================================================

.u-static { position: static !important; }
.u-fixed { position: fixed !important; }
.u-absolute { position: absolute !important; }
.u-relative { position: relative !important; }
.u-sticky { position: sticky !important; }

// Position values
.u-inset-0 { 
  top: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  left: 0 !important;
}
.u-inset-auto { 
  top: auto !important;
  right: auto !important;
  bottom: auto !important;
  left: auto !important;
}

.u-top-0 { top: 0 !important; }
.u-right-0 { right: 0 !important; }
.u-bottom-0 { bottom: 0 !important; }
.u-left-0 { left: 0 !important; }

.u-top-auto { top: auto !important; }
.u-right-auto { right: auto !important; }
.u-bottom-auto { bottom: auto !important; }
.u-left-auto { left: auto !important; }

// =============================================================================
// Overflow Utilities
// =============================================================================

.u-overflow-auto { overflow: auto !important; }
.u-overflow-hidden { overflow: hidden !important; }
.u-overflow-clip { overflow: clip !important; }
.u-overflow-visible { overflow: visible !important; }
.u-overflow-scroll { overflow: scroll !important; }

.u-overflow-x-auto { overflow-x: auto !important; }
.u-overflow-y-auto { overflow-y: auto !important; }
.u-overflow-x-hidden { overflow-x: hidden !important; }
.u-overflow-y-hidden { overflow-y: hidden !important; }
.u-overflow-x-scroll { overflow-x: scroll !important; }
.u-overflow-y-scroll { overflow-y: scroll !important; }

// =============================================================================
// Z-Index Utilities
// =============================================================================

@each $z-name, $z-value in tokens.$creo-z-indexes {
  .u-z-#{$z-name} {
    z-index: $z-value !important;
  }
}

// =============================================================================
// Visibility Utilities
// =============================================================================

.u-visible { visibility: visible !important; }
.u-invisible { visibility: hidden !important; }
.u-collapse { visibility: collapse !important; }

// =============================================================================
// Opacity Utilities
// =============================================================================

@each $opacity in (0, 5, 10, 20, 25, 30, 40, 50, 60, 70, 75, 80, 90, 95, 100) {
  .u-opacity-#{$opacity} {
    opacity: calc(#{$opacity} / 100) !important;
  }
}

// =============================================================================
// Cursor Utilities
// =============================================================================

.u-cursor-auto { cursor: auto !important; }
.u-cursor-default { cursor: default !important; }
.u-cursor-pointer { cursor: pointer !important; }
.u-cursor-wait { cursor: wait !important; }
.u-cursor-text { cursor: text !important; }
.u-cursor-move { cursor: move !important; }
.u-cursor-help { cursor: help !important; }
.u-cursor-not-allowed { cursor: not-allowed !important; }

// =============================================================================
// Pointer Events Utilities
// =============================================================================

.u-pointer-events-none { pointer-events: none !important; }
.u-pointer-events-auto { pointer-events: auto !important; }

// =============================================================================
// Object Fit Utilities
// =============================================================================

.u-object-contain { object-fit: contain !important; }
.u-object-cover { object-fit: cover !important; }
.u-object-fill { object-fit: fill !important; }
.u-object-none { object-fit: none !important; }
.u-object-scale-down { object-fit: scale-down !important; }

// =============================================================================
// Transition Utilities
// =============================================================================

.u-transition-none { transition: none !important; }
.u-transition-all { transition: all tokens.$creo-transition-base !important; }
.u-transition-colors { 
  transition: color tokens.$creo-transition-base, 
              background-color tokens.$creo-transition-base,
              border-color tokens.$creo-transition-base !important; 
}
.u-transition-opacity { transition: opacity tokens.$creo-transition-base !important; }
.u-transition-transform { transition: transform tokens.$creo-transition-base !important; }

// =============================================================================
// Transform Utilities
// =============================================================================

.u-transform { transform: translateX(var(--tw-translate-x, 0)) translateY(var(--tw-translate-y, 0)) rotate(var(--tw-rotate, 0)) skewX(var(--tw-skew-x, 0)) skewY(var(--tw-skew-y, 0)) scaleX(var(--tw-scale-x, 1)) scaleY(var(--tw-scale-y, 1)) !important; }
.u-transform-none { transform: none !important; }

// Scale utilities
.u-scale-0 { transform: scale(0) !important; }
.u-scale-50 { transform: scale(0.5) !important; }
.u-scale-75 { transform: scale(0.75) !important; }
.u-scale-90 { transform: scale(0.9) !important; }
.u-scale-95 { transform: scale(0.95) !important; }
.u-scale-100 { transform: scale(1) !important; }
.u-scale-105 { transform: scale(1.05) !important; }
.u-scale-110 { transform: scale(1.1) !important; }
.u-scale-125 { transform: scale(1.25) !important; }
.u-scale-150 { transform: scale(1.5) !important; }

// =============================================================================
// Usage Examples & Documentation
// =============================================================================

/*
Responsive Utility Usage Examples:

Display Utilities:
<div class="u-hidden u-md:block">Hidden on mobile, visible on medium+</div>
<div class="u-block u-lg:flex">Block on small, flex on large+</div>

Flexbox Utilities:
<div class="u-flex u-flex-col u-md:flex-row u-items-center u-justify-between">
  <span>Item 1</span>
  <span>Item 2</span>
</div>

Grid Utilities:
<div class="u-grid u-grid-cols-1 u-md:grid-cols-2 u-lg:grid-cols-3">
  <div class="u-col-span-full u-lg:col-span-1">Item 1</div>
  <div>Item 2</div>
  <div>Item 3</div>
</div>

Responsive Spacing:
<div class="u-m-4 u-md:m-8 u-lg:mx-auto">Responsive margins</div>
<div class="u-p-2 u-sm:p-4 u-lg:p-6">Responsive padding</div>

Width Utilities:
<div class="u-w-full u-md:w-1/2 u-lg:w-1/3">Responsive width</div>

Position and Layout:
<div class="u-relative u-overflow-hidden">
  <div class="u-absolute u-inset-0 u-flex u-items-center u-justify-center">
    Centered content
  </div>
</div>

Interactive States:
<button class="u-cursor-pointer u-transition-all u-opacity-90 hover:u-opacity-100">
  Interactive button
</button>

Performance Tip:
Use responsive utilities sparingly to keep CSS size manageable.
Focus on the most common breakpoint patterns.
*/